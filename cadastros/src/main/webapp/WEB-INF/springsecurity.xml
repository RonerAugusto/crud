<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.2.xsd">


	<!-- configuraçao do spring security para questao de login logaut validaço 
		de usuario -->
	<!-- metodos de segurançao referente os protocolo http -->


	<security:http use-expressions="true" auto-config="true">
		<security:intercept-url pattern="/admin/*"
			access="isAutheticated()" />
		<security:intercept-url pattern="/admin/*"
			access="hasRole('ADMIN')" />
			
     <security:intercept-url pattern="/admin/*"
			access="hasRole('VISITANTE')" />


		<security:form-login authentication-failure-url="/log.xhtml?erro=true"
			default-target-url="/admin/index.xhtml" login-page="/log.xhtml"
			username-parameter="login" password-parameter="senha" />



	


	</security:http>

	<!-- segunda parte do spring security faz consultas no banco pra ver quem 
		tem o papel de administrador usando o no -->
	<!-- usando nosso banco para isso -->

	<!-- users-by-username-query - pega o usuario do banco , authorities-by-username-query 
		- regra do banco -->

	<security:authentication-manager>
		<security:authentication-provider>
		    
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select login,senha, ativo from usuario where login=?"
				authorities-by-username-query="select u.login ,p.descricao from usuario u, perfil p where u.perfil_id=p.id and login=?" />



		</security:authentication-provider>

	</security:authentication-manager>


</beans>